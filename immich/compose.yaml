name: immich

########################### NETWORKS
networks:
  t3_proxy:
    external: true
  immich:
    name: immich
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.80.0/24

services:
  immich-server:
    container_name: immich_server
    # renovate: datasource=docker depName=ghcr.io/immich-app/immich-server
    image: ghcr.io/immich-app/immich-server:v2.1.0@sha256:72a9b9de6c6abfa7a9c9cdc244ae4d2bd9fea2ae00997f194cbd10aca72ea210
    pull_policy: always
    env_file:
      - /mnt/fast/stacks/immich/.env
    environment:
      - TZ=${TZ}
      # Advise the server to use VAAPI when available
      - IMMICH_FFMPEG_HWACCEL=vaapi
    volumes:
      - ${UPLOAD_LOCATION}:/data
      - /etc/localtime:/etc/localtime:ro
      # Optional read-only import staging (uncomment .env IMPORT_PATH and line below)
      # - ${IMPORT_PATH}:/import:ro
    ports:
      - "2283:2283"
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    devices:
      - /dev/dri:/dev/dri
    networks:
      - t3_proxy
      - immich
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich-rtr.entrypoints=websecure"
      - "traefik.http.routers.immich-rtr.rule=Host(`photos.${DOMAINNAME}`)"
      - "traefik.http.routers.immich-rtr.tls=true"
      - "traefik.http.routers.immich-rtr.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.immich-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.immich-rtr.service=immich-svc"
      - "traefik.http.services.immich-svc.loadbalancer.server.port=2283"

      - "tsbridge.enabled=true"
      - "tsbridge.service.name=photos"                 # Default: container name
      - "tsbridge.service.port=2283"                   # Port inside the container
      - "tsbridge.service.access_log=false"            # Disable access log
      - "tsbridge.service.tags=tag:dev,tag:prod"       # Override default tags
      - "tsbridge.service.whois_enabled=true"          # Add identity headers
      
  immich-machine-learning:
    container_name: immich_machine_learning
    # renovate: datasource=docker depName=ghcr.io/immich-app/immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:v2.0.1@sha256:45626a33361ef7ed361de41b0d2dc19e5949442cdf0a8eb64b157dc8a04e9855
    pull_policy: always
    env_file:
      - /mnt/fast/stacks/immich/.env
    environment:
      # CPU-only (works great on your N5)
      EXECUTION_PROVIDERS: CPUExecutionProvider
      IMMICH_ML_FORCE_CPU: true        # hard force CPU provider
      ROCR_VISIBLE_DEVICES:            # hide AMD GPUs from ROCm
      HIP_VISIBLE_DEVICES:             # (belt-and-suspenders)
    volumes:
      - model-cache:/cache
    restart: always
    healthcheck:
      disable: false
    group_add:
      - "${VIDEO_GID}"
      - "${RENDER_GID}"
    ipc: host
    networks:
      - immich

  redis:
    container_name: immich_redis
    # renovate: datasource=docker depName=docker.io/valkey/valkey
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    pull_policy: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    restart: always
    networks:
      - immich

  database:
    container_name: immich_postgres
    # renovate: datasource=docker depName=ghcr.io/immich-app/postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:41eacbe83eca995561fe43814fd4891e16e39632806253848efaf04d3c8a8b84
    pull_policy: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always
    networks:
      - immich

  # power-tools:
  #   container_name: immich_power_tools
  #   image: ghcr.io/varun-raj/immich-power-tools:latest
  #   pull_policy: always
  #   ports:
  #     - "8001:3000"
  #   environment:
  #     # Data Locations
  #     - UPLOAD_LOCATION=/pool/photos/upload
  #     - DB_DATA_LOCATION=/srv/appdata/immich/database
  #     - DOMAIN=deercrest.info
  #     # Database
  #     - DB_USERNAME=postgres
  #     - DB_DATABASE_NAME=immich
  #     - DB_PASSWORD=/run/secrets/immich_db_password
  #     # Immich Server
  #     - IMMICH_URL="http://172.16.1.21:2283" # Your immich instace ip address and port
  #     - EXTERNAL_IMMICH_URL="https://photos.deercrest.info" # External address of immich
  #     - IMMICH_API_KEY=/run/secrets/immich_api_key
  #     # AP and Maps
  #     - GOOGLE_MAPS_API_KEY=/run/secrets/google_maps_api_key
  #     - GEMINI_API_KEY=/run/secrets/gemini_api_key
  #   networks:
  #     - t3_proxy
  #     - immich
  #   secrets:
  #     - gemini_api_key
  #     - google_maps_api_key
  #     - immich_api_key
  #     - immich_db_password 
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.immichtools-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.immichtools-rtr.rule=Host(`photomagic.deercrest.info`)"
  #     - "traefik.http.routers.immichtools-rtr.tls=true"
  #     - "traefik.http.routers.immichtools-rtr.tls.certresolver=dns-cloudflare"
  #     - "traefik.http.routers.immichtools-rtr.middlewares=chain-authelia@file"
  #     - "traefik.http.routers.immichtools-rtr.service=immichtools-svc"
  #     - "traefik.http.services.immichtools-svc.loadbalancer.server.port=3000"

volumes:
  model-cache: {}

